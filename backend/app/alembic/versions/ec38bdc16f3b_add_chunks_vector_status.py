"""add_chunks_vector_status

Revision ID: ec38bdc16f3b
Revises: d2ad44deab20
Create Date: 2024-11-15 18:23:39.916306

"""
from alembic import op
import sqlalchemy as sa
from sqlmodel import select, Session

from app.core.db import engine
from app.models import KnowledgeBase
from app.models.knowledge_base_scoped.table_naming import get_kb_chunks_table_name

# revision identifiers, used by Alembic.
revision = 'ec38bdc16f3b'
down_revision = 'd2ad44deab20'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('chunks', sa.Column('vector_index_status', sa.Enum('NOT_STARTED', 'PENDING', 'RUNNING', 'COMPLETED', 'FAILED', name='vectorindexstatus'), nullable=False))
    op.add_column('chunks', sa.Column('vector_index_result', sa.Text(), nullable=True))

    # Handle knowledge base scoped tables.
    with Session(engine) as session:
        knowledge_bases = session.exec(select(KnowledgeBase)).all()
        for kb in knowledge_bases:
            chunks_table_name = get_kb_chunks_table_name(kb)
            op.add_column(chunks_table_name, sa.Column('vector_index_status', sa.Enum('NOT_STARTED', 'PENDING', 'RUNNING', 'COMPLETED', 'FAILED', name='vectorindexstatus'), nullable=False))
            op.add_column(chunks_table_name, sa.Column('vector_index_result', sa.Text(), nullable=True))
        session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('chunks', 'vector_index_result')
    op.drop_column('chunks', 'vector_index_status')

    # Handle knowledge base scoped tables.
    with Session(engine) as session:
        knowledge_bases = session.exec(select(KnowledgeBase)).all()
        for kb in knowledge_bases:
            chunks_table_name = get_kb_chunks_table_name(kb)
            op.drop_column(chunks_table_name, 'vector_index_result')
            op.drop_column(chunks_table_name, 'vector_index_status')
        session.commit()
    # ### end Alembic commands ###
