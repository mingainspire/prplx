{
  "prog.predictor": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "QA_content": "What is TiDB??\nAnswer: TiDB is an open-source distributed SQL database that supports Hybrid Transactional and Analytical Processing (HTAP) workloads[^1]. It is designed to provide a scalable, highly available, and MySQL-compatible database solution for large-scale data management. Let's explore TiDB's key features and functionalities:\n\n1. Distributed Architecture:\nTiDB has a distributed architecture that separates computing from storage, allowing for flexible and elastic scalability[^2]. This design enables users to scale out or scale in both computing and storage resources independently, adapting to changing workloads without disrupting operations.\n\n....\n\n8. Comprehensive Toolset:\nTiDB provides a rich set of tools for data migration, replication, and backup, facilitating easy integration with existing database systems and ensuring data safety[^3].\n\nBy addressing the challenges of scalability and high availability in a distributed environment while maintaining MySQL compatibility, TiDB positions itself as a powerful solution for businesses dealing with large-scale data and requiring both transactional and analytical processing capabilities.\n\n[^1]: [TiDB Introduction | PingCAP Docs](https:\/\/docs.pingcap.com\/tidb\/v6.1\/overview)\n[^2]: [TiDB Architecture | PingCAP Docs](https:\/\/docs.pingcap.com\/tidb\/v7.1\/tidb-architecture)\n[^3]: [TiDB Architecture | PingCAP Docs](https:\/\/docs.pingcap.com\/tidb\/stable\/tidb-architecture)\n[^4]: [TiDB Key Features | PingCAP Docs](https:\/\/docs.pingcap.com\/tidb\/v5.4\/overview)\n",
        "sample": "{\"no_reasonable_example\":true,\"steps\":[]}"
      },
      {
        "QA_content": "User question: TiDB \u652f\u6301 vector search \u5417\uff1f\nAnswer: \u662f\u7684\uff0cTiDB \u652f\u6301\u5411\u91cf\u641c\u7d22\uff08Vector Search\uff09\u529f\u80fd\u3002\u8ba9\u6211\u8be6\u7ec6\u4e3a\u60a8\u89e3\u91ca TiDB \u7684\u5411\u91cf\u641c\u7d22\u529f\u80fd\uff1a\n\n1. \u529f\u80fd\u6982\u8ff0\uff1a\nTiDB \u7684\u5411\u91cf\u641c\u7d22\u529f\u80fd\u5141\u8bb8\u7528\u6237\u5728 TiDB \u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u548c\u67e5\u8be2\u5411\u91cf\u6570\u636e\uff0c\u5b9e\u73b0\u9ad8\u6548\u7684\u76f8\u4f3c\u6027\u641c\u7d22[^1]\u3002\u8fd9\u9879\u529f\u80fd\u76ee\u524d\u5904\u4e8e beta \u9636\u6bb5\uff0c\u4ec5\u9002\u7528\u4e8e TiDB Serverless \u96c6\u7fa4[^2]\u3002\n\n2. \u5de5\u4f5c\u539f\u7406\uff1a\nTiDB \u5411\u91cf\u641c\u7d22\u4f7f\u7528\u8fd1\u4f3c\u6700\u8fd1\u90bb\uff08ANN\uff09\u641c\u7d22\u7b97\u6cd5\u6765\u52a0\u901f K-\u6700\u8fd1\u90bb\uff08KNN\uff09\u67e5\u8be2[^3]\u3002\u5b83\u901a\u8fc7\u521b\u5efa\u548c\u5229\u7528\u5411\u91cf\u641c\u7d22\u7d22\u5f15\u6765\u5b9e\u73b0\u6beb\u79d2\u7ea7\u7684\u67e5\u8be2\u901f\u5ea6\u3002\u76ee\u524d\uff0cTiDB \u652f\u6301 HNSW\uff08Hierarchical Navigable Small World\uff09\u7b97\u6cd5\u4f5c\u4e3a\u5411\u91cf\u641c\u7d22\u7d22\u5f15[^3]\u3002\n\n3. \u652f\u6301\u7684\u5411\u91cf\u7c7b\u578b\uff1a\nTiDB \u5f15\u5165\u4e86\u65b0\u7684\u5411\u91cf\u6570\u636e\u7c7b\u578b\u6765\u652f\u6301\u5411\u91cf\u641c\u7d22\u3002\u5b83\u53ef\u4ee5\u5b58\u50a8\u6700\u591a 16,000 \u7ef4\u7684\u5411\u91cf\uff0c\u8fd9\u8db3\u4ee5\u6ee1\u8db3\u5927\u591a\u6570\u5d4c\u5165\u6a21\u578b\u7684\u9700\u6c42[^4]\u3002\n\n4. \u4f7f\u7528\u65b9\u6cd5\uff1a\n\u8981\u4f7f\u7528 TiDB \u8fdb\u884c\u5411\u91cf\u641c\u7d22\uff0c\u60a8\u9700\u8981\uff1a\n   a. \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u5411\u91cf\u6570\u636e\u7c7b\u578b\u5217\u7684\u8868\n   b. \u63d2\u5165\u5411\u91cf\u6570\u636e\n   c. \u521b\u5efa\u5411\u91cf\u641c\u7d22\u7d22\u5f15\n   d. \u6267\u884c\u5411\u91cf\u76f8\u4f3c\u6027\u67e5\u8be2\n\n5. \u96c6\u6210\u4e0e\u5e94\u7528\uff1a\nTiDB \u5411\u91cf\u641c\u7d22\u53ef\u4ee5\u4e0e\u591a\u79cd AI \u6846\u67b6\u548c\u5d4c\u5165\u6a21\u578b\u96c6\u6210\uff0c\u5982 Langchain \u548c LlamaIndex[^5]\u3002\u8fd9\u4f7f\u5f97\u5b83\u53ef\u4ee5\u5e94\u7528\u4e8e\u5404\u79cd\u573a\u666f\uff0c\u5982\u8bed\u4e49\u641c\u7d22\u3001\u63a8\u8350\u7cfb\u7edf\u7b49\u3002\n\n6. \u6027\u80fd\u4f18\u5316\uff1a\nTiDB \u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u6cd5\u6765\u4f18\u5316\u5411\u91cf\u641c\u7d22\u6027\u80fd\uff0c\u5305\u62ec\u7d22\u5f15\u8c03\u4f18\u548c\u67e5\u8be2\u4f18\u5316[^6]\u3002\n\n7. SQL \u652f\u6301\uff1a\nTiDB \u6269\u5c55\u4e86 MySQL \u8bed\u6cd5\u4ee5\u652f\u6301\u5411\u91cf\u641c\u7d22\uff0c\u5f15\u5165\u4e86\u65b0\u7684\u5411\u91cf\u51fd\u6570\u548c\u64cd\u4f5c\u7b26[^7]\u3002\u8fd9\u4f7f\u5f97\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u719f\u6089\u7684 SQL \u8bed\u53e5\u6765\u6267\u884c\u5411\u91cf\u641c\u7d22\u64cd\u4f5c\u3002\n\n\u603b\u7684\u6765\u8bf4\uff0cTiDB \u7684\u5411\u91cf\u641c\u7d22\u529f\u80fd\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5728\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u9ad8\u6548\u5730\u8fdb\u884c\u5411\u91cf\u76f8\u4f3c\u6027\u641c\u7d22\uff0c\u9002\u7528\u4e8e\u5404\u79cd AI \u548c\u673a\u5668\u5b66\u4e60\u5e94\u7528\u573a\u666f\u3002\n\nExample SQL:\n\n\u4ee5\u4e0b\u662f\u4f7f\u7528 TiDB \u8fdb\u884c\u5411\u91cf\u641c\u7d22\u7684\u793a\u4f8b SQL\uff1a\n\n```sql\n-- \u521b\u5efa\u5305\u542b\u5411\u91cf\u6570\u636e\u7684\u8868\nCREATE TABLE vector_data (\n    id INT PRIMARY KEY,\n    description VARCHAR(255),\n    embedding VECTOR(128) -- \u5047\u8bbe\u6211\u4eec\u4f7f\u7528128\u7ef4\u7684\u5411\u91cf\n);\n\n-- \u63d2\u5165\u5411\u91cf\u6570\u636e\nINSERT INTO vector_data (id, description, embedding) VALUES \n(1, 'Sample 1', '[1.0, 2.0, 3.0, ..., 128.0]'),\n(2, 'Sample 2', '[2.0, 3.0, 4.0, ..., 129.0]');\n\n-- \u521b\u5efa\u5411\u91cf\u641c\u7d22\u7d22\u5f15\nCREATE INDEX idx_embedding ON vector_data USING HNSW(embedding);\n\n-- \u6267\u884c\u5411\u91cf\u76f8\u4f3c\u6027\u67e5\u8be2\nSELECT id, description, VECTOR_DISTANCE(embedding, '[1.1, 2.1, 3.1, ..., 128.1]') AS distance\nFROM vector_data\nORDER BY distance\nLIMIT 5;\n```\n\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b SQL \u793a\u4f8b\u662f\u6982\u5ff5\u6027\u7684\uff0c\u5b9e\u9645\u4f7f\u7528\u65f6\u9700\u8981\u6839\u636e\u60a8\u7684\u5177\u4f53\u6570\u636e\u548c\u9700\u6c42\u8fdb\u884c\u8c03\u6574\u3002\n\n[^1]: [Vector Search Overview | PingCAP Docs](https:\/\/docs.pingcap.com\/tidbcloud\/vector-search-overview)\n[^2]: [Get Started with Vector Search via SQL | PingCAP Docs](https:\/\/docs.pingcap.com\/tidbcloud\/vector-search-get-started-using-sql)\n[^3]: [Vector Search Index | PingCAP Docs](https:\/\/docs.pingcap.com\/tidbcloud\/vector-search-index)\n[^4]: [Vector Search Integration Overview | PingCAP Docs](https:\/\/docs.pingcap.com\/tidbcloud\/vector-search-integration-overview)\n[^5]: [AI frameworks | PingCAP Docs](https:\/\/docs.pingcap.com\/tidbcloud\/vector-search-integration-overview#ai-frameworks)\n[^6]: [Improve Vector Search Performance | PingCAP Docs](https:\/\/docs.pingcap.com\/tidbcloud\/vector-search-improve-performance)\n[^7]: [Vector Functions and Operators | PingCAP Docs](https:\/\/docs.pingcap.com\/tidbcloud\/vector-search-functions-and-operators)",
        "sample": "{\"no_reasonable_example\":false,\"steps\":[{\"explanation\":\"Create a table with a column of vector data type. However to simplify the demo, Let's set the vector length to 3. \",\"sql\":\"CREATE TABLE vector_data (id INT PRIMARY KEY, description VARCHAR(255), embedding VECTOR(3));\"},{\"explanation\":\"Insert sample data with vector values.\",\"sql\":\"INSERT INTO vector_data (id, description, embedding) VALUES (1, 'Sample 1', '[1.0, 2.0, 3.0]'), (2, 'Sample 2', '[2.0, 3.0, 4.0]');\"},{\"explanation\":\"Create a vector search index using the HNSW algorithm. However, since TiDB does not yet support creating indexes using the CREATE INDEX statement, we will skip this step.\",\"sql\":\"-- CREATE INDEX idx_embedding ON vector_data USING HNSW(embedding);\"},{\"explanation\":\"Execute a vector similarity query to find the closest vectors. But TiDB don't support `VECTOR_DISTANCE` function, let's use `VEC_COSINE_DISTANCE`.\",\"sql\":\"SELECT id, description, VEC_COSINE_DISTANCE(embedding, '[1.1, 2.1, 3.1]') AS distance FROM vector_data ORDER BY distance LIMIT 5;\"},{\"explanation\":\"Clear the table after the demo.\",\"sql\":\"DROP TABLE vector_data;\"}]}"
      }
    ],
    "signature_instructions": "Your goal is to extract the \"SQL Example\" from the provided answer. This section contains SQL queries intended to address the user's issue. \n\nFollow these steps to ensure the SQL examples are accurate and executable:\n\n    1. Extract the SQL Example: Identify and extract the SQL Example Section from the given answer.         This section should contain all the SQL queries that were generated.\n    2. Review the SQL Example:\n      - Carefully review each SQL query to ensure it is accurate and can be executed directly.\n  - Verify that the SQL syntax is fully supported and executable in TiDB Serverless.\n  - Check for missing details, or syntax that might be unsupported in TiDB.\n    3. Manual Adjustments If Necessary: If necessary, manually adjust the SQL queries to make them fully executable in TiDB Serverless.         This may include adding missing content, replacing placeholder table names, or modifying syntax to match TiDB's supported features\n    4. Generate the Final SQL List: Provide the final, executable SQL Example Section as a list of SQL queries that can be directly used in TiDB Serverless.\n\nBy following these instructions, you will help the user not only resolve their current query but also deepen their understanding of the topic through practical application.",
    "signature_prefix": "Sample:"
  }
}